name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Portal UAD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      # Set Current Date and Time As Env Variable
      - name: Set current date and time as env variable
        run: echo "date_time_now=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print \\\\\\\$2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:assembleDebug

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      - name: List outputs
        run: ls -R ./${{ env.main_project_module }}/build/outputs/

      # Get commit messages
      - name: Get commit messages
        id: commit_messages
        run: |
          echo "::set-output name=messages::$(git log --pretty=format:"%s" -10)"

      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.date_time_now }}
          release_name: Release ${{ env.date_time_now }}
          body: |
            Release of ${{ env.date_time_now }}
            Commit Changes:
            ${{ steps.commit_messages.outputs.messages }}
          draft: false
          prerelease: true

      # Upload APK Debug to GitHub release
      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.main_project_module }}/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
